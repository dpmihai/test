/*
 * DesktopDemo.java
 * 
 * Demonstrates the new Desktop API available in Java SE 6.
 * This demo application must run with Java SE 6 or later.
 *
 */

package print;

import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;

/**
 * DesktopDemo
 * 
 * @author  John O'Conner
 *
 */
public class DesktopDemo extends javax.swing.JFrame {
    
    /**
     * Creates new form DesktopDemo
     */
    public DesktopDemo() {
        // init all gui components
        initComponents();
        // disable buttons that launch browser, email client, 
        // disable buttons that open, edit, print files
        disableActions();
        // before any Desktop APIs are used, first check whether the API is
        // supported by this particular VM on this particular host
        if (Desktop.isDesktopSupported()) {
            desktop = Desktop.getDesktop();
            // now enable buttons for actions that are supported.
            enableSupportedActions();
        }
        
        loadFrameIcon();
    }
    
    /**
     * Load our own "desktop" icon into our frame window.
     */
    private void loadFrameIcon() {
        URL imgUrl = null;
        ImageIcon imgIcon = null;
        
        imgUrl = DesktopDemo.class.getResource("desk32.gif");
        imgIcon = new ImageIcon(imgUrl);
        Image img = imgIcon.getImage();
        this.setIconImage(img);
        
    }
    
    /**
     * Enable actions that are supported on this host.
     * The actions are: open browser, open email client, and 
     * open, edit, and print files using their associated application
     */
    
    private void enableSupportedActions() {
        if (desktop.isSupported(Desktop.Action.BROWSE)) {
            txtBrowserURI.setEnabled(true);
            btnLaunchBrowser.setEnabled(true);
        }
        
        if (desktop.isSupported(Desktop.Action.MAIL)) {
            txtMailTo.setEnabled(true);
            btnLaunchEmail.setEnabled(true);
        }

        if (desktop.isSupported(Desktop.Action.OPEN)) {
            rbOpen.setEnabled(true);
        }
        if (desktop.isSupported(Desktop.Action.EDIT)) {
            rbEdit.setEnabled(true);
        }
        if (desktop.isSupported(Desktop.Action.PRINT)) {
            rbPrint.setEnabled(true);
        }
        
        if (rbEdit.isEnabled() || rbOpen.isEnabled() || rbPrint.isEnabled()) {
            txtFile.setEnabled(true);
            btnLaunchApplication.setEnabled(true);
        }
    }
    
    /**
     * Disable all graphical components until we know
     * whether their functionality is supported.
     */
    private void disableActions() {
        txtBrowserURI.setEnabled(false);
        btnLaunchBrowser.setEnabled(false);
        
        txtMailTo.setEnabled(false);
        btnLaunchEmail.setEnabled(false);
        
        rbEdit.setEnabled(false);
        rbOpen.setEnabled(false);
        rbPrint.setEnabled(false);

        txtFile.setEnabled(false);
        btnLaunchApplication.setEnabled(false);        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bgAppAction = new javax.swing.ButtonGroup();
        txtBrowserURI = new javax.swing.JTextField();
        btnLaunchBrowser = new javax.swing.JButton();
        txtMailTo = new javax.swing.JTextField();
        btnLaunchEmail = new javax.swing.JButton();
        txtFile = new javax.swing.JTextField();
        rbOpen = new javax.swing.JRadioButton();
        action = Desktop.Action.OPEN;
        rbEdit = new javax.swing.JRadioButton();
        rbPrint = new javax.swing.JRadioButton();
        btnLaunchApplication = new javax.swing.JButton();
        lblMailRecipient = new javax.swing.JLabel();
        lblBrowserUri = new javax.swing.JLabel();
        lblFile = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DesktopDemo");
        txtBrowserURI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onTxtBrowserURIKeyTyped(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(txtBrowserURI, gridBagConstraints);

        btnLaunchBrowser.setText("Launch Browser");
        btnLaunchBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onLaunchBrowser(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(btnLaunchBrowser, gridBagConstraints);

        txtMailTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onTxtMailToKeyTyped(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(txtMailTo, gridBagConstraints);

        btnLaunchEmail.setText("Launch Mail");
        btnLaunchEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onLaunchMail(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(btnLaunchEmail, gridBagConstraints);

        txtFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onTxtFileKeyTyped(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(txtFile, gridBagConstraints);

        bgAppAction.add(rbOpen);
        rbOpen.setSelected(true);
        rbOpen.setText("Open");
        rbOpen.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbOpen.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rbOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOpenAction(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(rbOpen, gridBagConstraints);

        bgAppAction.add(rbEdit);
        rbEdit.setText("Edit");
        rbEdit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbEdit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rbEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onEditAction(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(rbEdit, gridBagConstraints);

        bgAppAction.add(rbPrint);
        rbPrint.setText("Print");
        rbPrint.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbPrint.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rbPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onPrintAction(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(rbPrint, gridBagConstraints);

        btnLaunchApplication.setText("Launch Default Application");
        btnLaunchApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onLaunchDefaultApplication(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(btnLaunchApplication, gridBagConstraints);

        lblMailRecipient.setText("Mail Recipient:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lblMailRecipient, gridBagConstraints);

        lblBrowserUri.setText("URI:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lblBrowserUri, gridBagConstraints);

        lblFile.setText("File:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lblFile, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Invoke the default application just as if the launch
     * button had been pressed.
     */
    private void onTxtFileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onTxtFileKeyTyped
        char ch = evt.getKeyChar();
        if (ch == ENTER_CHAR) {
            onLaunchDefaultApplication(null);
        }
    }//GEN-LAST:event_onTxtFileKeyTyped

    /**
     * Invoke the default email client just as if the 
     * launch button had been pressed.
     */
    private void onTxtMailToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onTxtMailToKeyTyped
        char ch = evt.getKeyChar();
        if (ch == ENTER_CHAR) {
            onLaunchMail(null);
        }
    }//GEN-LAST:event_onTxtMailToKeyTyped

    /**
     * Invoke the default browser just as if the 
     * launch button had been pressed.
     */
    private void onTxtBrowserURIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onTxtBrowserURIKeyTyped
        char ch = evt.getKeyChar();
        if (ch == ENTER_CHAR) {
            onLaunchBrowser(null);
        }
    }//GEN-LAST:event_onTxtBrowserURIKeyTyped

    /** 
     * Set the Desktop.Action to PRINT before invoking
     * the default application.
     */
    private void onPrintAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onPrintAction
        action = Desktop.Action.PRINT;
    }//GEN-LAST:event_onPrintAction

     /** 
     * Set the Desktop.Action to EDIT before invoking
     * the default application.
     */
    private void onEditAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onEditAction
        action = Desktop.Action.EDIT;
    }//GEN-LAST:event_onEditAction

     /** 
     * Set the Desktop.Action to OPEN before invoking
     * the default application.
     */
    private void onOpenAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOpenAction
        action = Desktop.Action.OPEN;
    }//GEN-LAST:event_onOpenAction
    

    /**
     * Launch the default application associated with a specific
     * filename using the preset Desktop.Action.
     * 
     */
    private void onLaunchDefaultApplication(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onLaunchDefaultApplication
        String fileName = txtFile.getText();
        File file = new File(fileName);

        try {
            switch(action) {
                case OPEN:
                    desktop.open(file);
                    break;
                case EDIT:
                    desktop.edit(file);
                    break;
                case PRINT:
                    desktop.print(file);
                    break;
            }
        }
        catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }//GEN-LAST:event_onLaunchDefaultApplication
    
    
    /**
     * Launch the default email client using the "mailto"
     * protocol and the text supplied by the user.
     *
     */
    private void onLaunchMail(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onLaunchMail
        String mailTo = txtMailTo.getText();
        URI uriMailTo = null;
        try {
            if (mailTo.length() > 0) {
                uriMailTo = new URI("mailto", mailTo, null);
                desktop.mail(uriMailTo);
            } else {
                desktop.mail();
            }
        }
        catch(IOException ioe) {
            ioe.printStackTrace();
        }
        catch(URISyntaxException use) {
            use.printStackTrace();
        }        
    }//GEN-LAST:event_onLaunchMail

    /**
     * Launch the default browser with the text provided by the 
     * user.
     *
     */
    private void onLaunchBrowser(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onLaunchBrowser
        URI uri = null;
        try {
            uri = new URI(txtBrowserURI.getText());
            desktop.browse(uri);
        }
        catch(IOException ioe) {
            ioe.printStackTrace();
        }
        catch(URISyntaxException use) {
            use.printStackTrace();
        }
    }//GEN-LAST:event_onLaunchBrowser
    
    /* throws IOException*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DesktopDemo().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.ButtonGroup bgAppAction;
    public javax.swing.JButton btnLaunchApplication;
    public javax.swing.JButton btnLaunchBrowser;
    public javax.swing.JButton btnLaunchEmail;
    public javax.swing.JLabel lblBrowserUri;
    public javax.swing.JLabel lblFile;
    public javax.swing.JLabel lblMailRecipient;
    public javax.swing.JRadioButton rbEdit;
    public javax.swing.JRadioButton rbOpen;
    public javax.swing.JRadioButton rbPrint;
    public javax.swing.JTextField txtBrowserURI;
    public javax.swing.JTextField txtFile;
    public javax.swing.JTextField txtMailTo;
    // End of variables declaration//GEN-END:variables
    
    private boolean bDesktopSupported;
    private Desktop desktop;
    private Desktop.Action action;
    
    private static final char ENTER_CHAR = '\n';
}
